# vim: set foldmethod=marker:

# always clear: $super+g (for testing)
set $super Mod4
set $alt Mod1

# set font
font pango: Noto Sans 10

# location for scripts
set $desktop-environment-folder ~/.config/desktop-environment/

# Keybindings (Function) # {{{

# change volume
bindsym XF86AudioRaiseVolume exec pulseaudio-ctl up
bindsym XF86AudioLowerVolume exec pulseaudio-ctl down
bindsym XF86AudioMute exec pulseaudio-ctl mute

# music control
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl prev
bindsym XF86AudioPlay exec playerctl toggle
bindsym XF86AudioStop exec playerctl stop

# screenshot
bindsym Print exec flameshot gui

# }}}
# Keybindings (Regular)  # {{{

# Use Mouse+$super to drag floating windows to their wanted position
floating_modifier $super

# run any program
bindsym $super+space exec rofi -lines 12 -padding 18 -width 60 -location 0 -show drun -sidebar-mode -columns 3 -font 'Noto Sans 20'

#--------------#
# Applications #
#--------------#

# start a terminal
bindsym $super+Return exec --no-startup-id "$desktop-environment-folder/scripts/terminal"
# start a terminal with the same cwd as the current focused program.
bindsym $super+Control+Return exec --no-startup-id "$desktop-environment-folder/scripts/terminal_cwd"

# set output tty with to-tty (https://github.com/hixan/to_tty)
bindsym $super+o exec --no-startup-id "to-tty i3 -s"

## Open clipboard item

# open copied link in VLC
bindsym $super+v exec vlc "$(xsel -bo)"

# open copied link in firefox
bindsym $super+w exec firefox --new-tab "$(xsel -bo)"
bindsym $super+Shift+w exec firefox --search "$(xsel -bo)" && sleep .5 && i3-msg "floating enable"

# start a browser
bindsym $super+Shift+Return exec firefox

# open file browser
bindsym $super+Shift+n exec --no-startup-id thunar

# open emacs frame
bindsym $super+b exec --no-startup-id "notify-send -t 3000 'starting emacs'; emacsclient --create-frame --alternate-editor ''"

# open emacs frame to clipboard (floating)
bindsym $super+c exec --no-startup-id "notify-send -t 3000 'starting emacs clipboard'; $desktop-environment-folder/scripts/launch_emacs_edit_clipboard;"

# }}}
# Autostart              # {{{

# adjust monitor profiles
exec_always --no-startup-id exec autorandr -c

# set keyboard layout with mappings
exec --no-startup-id exec key-mapper-control --command autoload

# enable touchpad gestures
exec libinput-gestures

# volume tray icon
exec --no-startup-id pasystray

# set background
exec --no-startup-id nitrogen --restore; sleep 1; picom -b --config $desktop-environment-folder/picom/picom.conf

# text on background
exec --no-startup-id conky  # system info

# clipboard manager
exec --no-startup-id clipman

# notification daemon
exec --no-startup-id dunst

# printer management
#exec --no-startup-id system-config-printer-applet  # manage printers

# wifi tray icon
exec --no-startup-id nm-applet

# authentication for programs that need su privelages to run
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# power manager icon
exec --no-startup-id xfce4-power-manager

# set focus indicator and border width
exec_always --no-startup-id exec $desktop-environment-folder/scripts/focus_indicate

# x resources
exec_always --no-startup-id xrdb $desktop-environment-folder/xresources

# }}}
# Misc Functions         # {{{

# show x errors
bindsym $super+e exec $desktop-environment-folder/scripts/show_x_errors

# kill focused window
bindsym $super+Shift+q kill

# change focus
bindsym $super+h focus left
bindsym $super+j focus down
bindsym $super+k focus up
bindsym $super+l focus right

# move focused window
bindsym $super+Shift+h move left
bindsym $super+Shift+j move down
bindsym $super+Shift+k move up
bindsym $super+Shift+l move right

# toggle split orientation
bindsym $super+s split toggle

# enter fullscreen mode for the focused container
bindsym $super+f fullscreen toggle

# move focused workspace to different monitor
bindsym $super+Ctrl+l move workspace to output right

# move to scratchpad
bindsym $super+minus move scratchpad
bindsym $super+plus scratchpad show

# change container layout (stacked, tabbed, toggle split)
bindsym $super+p layout stacking
bindsym $super+comma layout tabbed
bindsym $super+period layout toggle split

# toggle tiling / floating
bindsym $super+Shift+f floating toggle

# change focus between tiling / floating windows
bindsym $super+t focus mode_toggle

# focus the parent container
bindsym $super+a focus parent

# focus the child container
bindsym $super+d focus child

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $super+Shift+r restart

# switch to workspace
bindsym $super+1 workspace $ws1
bindsym $super+2 workspace $ws2
bindsym $super+3 workspace $ws3
bindsym $super+4 workspace $ws4
bindsym $super+5 workspace $ws5
bindsym $super+6 workspace $ws6
bindsym $super+7 workspace $ws7
bindsym $super+8 workspace $ws8
bindsym $super+9 workspace $ws9

# move focused container to workspace
bindsym $super+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $super+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $super+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $super+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $super+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $super+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $super+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $super+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $super+Shift+9 move container to workspace $ws9; workspace $ws9

# }}}
# Variables and Colors   # {{{

# colour of                  	border 		background, 	text, 		indicator, 	child_border
client.focused             	#bf616a		#2f343f		#d8dee8		#bf616a		#d8dee8
client.focused_inactive    	#2f343f		#2f343f		#d8dee8		#2f343f		#2f343f
client.unfocused           	#2f343f		#2f343f		#d8dee8		#2f343f		#2f343f
client.urgent              	#2f343f		#2f343f		#d8dee8		#2f343f		#2f343f
client.placeholder         	#2f343f		#2f343f		#d8dee8		#2f343f		#2f343f
client.background          	#2f343f 	

# PROTIP: You can also dynamically set dmenu's colors this way:
#bindsym $super+d exec dmenu_run -nb "$fg" -nf "$bg" -sb "$bg" -sf "$fg"

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"

# Specify the distance between windows in pixels. (i3-gaps)
gaps inner 20
gaps outer 5

# disable borders when only one window
smart_borders on

# }}}
# Modes                  # {{{

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        bindsym h resize shrink width 1 px or 1 ppt
        bindsym j resize grow height 1 px or 1 ppt
        bindsym k resize shrink height 1 px or 1 ppt
        bindsym l resize grow width 1 px or 1 ppt

        # quick adjustment
        bindsym Shift+h resize shrink width 10 px or 10 ppt
        bindsym Shift+j resize grow height 10 px or 10 ppt
        bindsym Shift+k resize shrink height 10 px or 10 ppt
        bindsym Shift+l resize grow width 10 px or 10 ppt
	#
        # change gaps interactively
        bindsym minus gaps inner current minus 6
        bindsym plus gaps inner current plus 6
        bindsym Shift+minus gaps inner current minus 12
        bindsym Shift+plus gaps inner current plus 12

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $super+r mode "resize"

# Set shut down, restart and locking features
bindsym $super+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec i3lock -ti "/usr/share/wallpapers/garuda-wallpapers/lock.png", mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)

bar {
    mode hide
    hidden_state hide
    modifier Mod4
    status_command exec /usr/bin/net-speed.sh
    colors {
	    background #2f343f
		statusline #FFFFFF
		separator  #666666

		focused_workspace  #4C7899 #285577 #FFFFFF
		active_workspace   #333333 #222222 #FFFFFF
		inactive_workspace #333333 #222222 #888888
		urgent_workspace   #2F343A #900000 #FFFFFF
#binding_mode      #2F343A #900000 #FFFFFF
# colour of border, background, and text    
    }

}
#bar {
#	i3bar_command i3bar
#	status_command i3status
#	position top
#
### please set your primary output first. Example: 'xrandr --output eDP1 --primary'
##	tray_output primary
##	tray_output eDP1
#
#	bindsym button4 nop
#	bindsym button5 nop
##   font xft:URWGothic-Book 11
#	strip_workspace_numbers yes
#
#    colors {
#        background $col0
#        statusline $col1
#        separator  $col7
#
##                      border  backgr. text
#        focused_workspace  $col0 $col2 $col0
#        active_workspace   $col0 $col0 #FDF6E3
#        inactive_workspace $col0 $col0 #EEE8D5
#        binding_mode       $col0 $col0 #F9FAF9
#        urgent_workspace   $col0 $col0 #E5201D
#    }
#}
# }}}
