
# always clear: $mod+g (for testing)
set $mod Mod4

set $desktop-environment-folder ~/.config/desktop-environment/


# adjust monitor profiles
exec_always --no-startup-id exec $desktop-environment-folder/scripts/monitor_profiles

# set keyboard layout with mappings
exec_always --no-startup-id exec $desktop-environment-folder/scripts/keyboard_layout

# set colorscheme
exec_always --no-startup-id exec $desktop-environment-folder/scripts/colorscheme


# set focus indicator and border width (have one of the two lines below commented)
exec_always --no-startup-id exec $desktop-environment-folder/scripts/focus_indicate
#for_window [class="^.*"] border pixel 0
new_window 1pixel

exec --no-startup-id nm-applet
# network-manager applet (daemon should be started by systemd)

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status; notify-send 'volume up'"
bindsym XF86AudioLowerVolume exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status; notify-send 'volume down'"
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# brightness control
# TODO manual script to make this seem more linear
bindsym XF86MonBrightnessUp exec "brightnessctl s +10%; notify-send 'brightness up'"
bindsym XF86MonBrightnessDown exec "brightnessctl s 10%-; notify-send 'brightness down'"

# Screenshot
bindsym Print exec --no-startup-id "deepin-screenshot -f"
bindsym Shift+Print exec --no-startup-id "deepin-screenshot -n"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec --no-startup-id "$desktop-environment-folder/scripts/terminal"
# start a terminal with the same cwd as the current focused program
bindsym $mod+Control+Return exec --no-startup-id "$desktop-environment-folder/scripts/terminal_cwd"

# open copied link in VLC
bindsym $mod+v exec vlc "$(xsel -bo)"

# start a browser
bindsym $mod+Shift+Return exec default_browser

# open file browser
bindsym $mod+Shift+n exec --no-startup-id pcmanfm
bindsym $mod+Shift+t exec --no-startup-id urxvt -s ranger

# open emacs frame
bindsym $mod+b exec --no-startup-id "notify-send -t 5000 'starting emacs'; emacsclient --create-frame --alternate-editor ''"
# start emacs server

# open emacs frame to clipboard (floating)
bindsym $mod+c exec --no-startup-id "notify-send -t 5000 'starting emacs clipboard'; $desktop-environment-folder/i3/launch_emacs_edit_clipboard.sh;"

# kill focused window
bindsym $mod+Shift+q kill

# Lock the screen
bindsym $mod+Escape exec --no-startup-id blurlock
# after 10 minutes
exec --no-startup-id xautolock -time 10 -locker blurlock

set_from_resource $col0 i3wm.color0 #f0f0f0
set_from_resource $col1 i3wm.color1 #f0f0f0
set_from_resource $col2 i3wm.color2 #f0f0f0
set_from_resource $col3 i3wm.color3 #f0f0f0
set_from_resource $col4 i3wm.color4 #f0f0f0
set_from_resource $col5 i3wm.color5 #f0f0f0
set_from_resource $col6 i3wm.color6 #f0f0f0
set_from_resource $col7 i3wm.color7 #f0f0f0
set_from_resource $col8 i3wm.color8 #f0f0f0

set $noborder #ffffff00


# class                 border    backgr.   text      indicator child_border
client.focused          $col1     $col0     $col8     $col2     $col1
client.focused_inactive $noborder $col0     $col8     $noborder $noborder
client.unfocused        $noborder $col0     $col8     $noborder $noborder
client.urgent           $noborder $col0     $col8     $noborder $noborder
client.placeholder      $noborder $col0     $col8     $noborder $noborder

client.background       $bg

# PROTIP: You can also dynamically set dmenu's colors this way:
#bindsym $mod+d exec dmenu_run -nb "$fg" -nf "$bg" -sb "$bg" -sf "$fg"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# move focused workspace
bindsym $mod+Ctrl+l move workspace to output right

# move to scratchpad
bindsym $mod+minus move scratchpad
bindsym $mod+plus scratchpad show

# toggle split orientation
bindsym $mod+s split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+p layout stacking
bindsym $mod+comma layout tabbed
bindsym $mod+period layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+t focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "(1) Home"
set $ws2 "(2) Code"
set $ws3 "(3) Web"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "(9) Media"
set $ws10 "10"

# Specify the distance between windows in pixels. (i3-gaps)
gaps inner 25
gaps outer 0

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r exec autorandr -c && i3-msg restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# start program launcher
bindsym $mod+space exec --no-startup-id dmenu_recency

################################################################################################
## sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later! ##
################################################################################################

exec --no-startup-id volumeicon  # volume
exec --no-startup-id nm-applet  # network (wifi)
exec --no-startup-id blueman-applet  # bluetooth
exec --no-startup-id xfce4-power-manager  # power + hibernate
#exec --no-startup-id redshift-gtk  # redshift at night
exec --no-startup-id system-config-printer-applet  # manage printers
#exec --no-startup-id pulseaudio
#exec --no-startup-id pa-applet

################################################################################################

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 1 px or 1 ppt
        bindsym j resize grow height 1 px or 1 ppt
        bindsym k resize shrink height 1 px or 1 ppt
        bindsym l resize grow width 1 px or 1 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 2 px or 2 ppt
        bindsym Down resize grow height 2 px or 2 ppt
        bindsym Up resize shrink height 2 px or 2 ppt
        bindsym Right resize grow width 2 px or 2 ppt

        # quick adjustment
        bindsym Shift+h resize shrink width 10 px or 10 ppt
        bindsym Shift+j resize grow height 10 px or 10 ppt
        bindsym Shift+k resize shrink height 10 px or 10 ppt
        bindsym Shift+l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Shift+Left resize shrink width 10 px or 10 ppt
        bindsym Shift+Down resize grow height 10 px or 10 ppt
        bindsym Shift+Up resize shrink height 10 px or 10 ppt
        bindsym Shift+Right resize grow width 10 px or 10 ppt

        # change gaps interactively
        bindsym minus gaps inner current minus 6
        bindsym plus gaps inner current plus 6
        bindsym Shift+minus gaps inner current minus 12
        bindsym Shift+plus gaps inner current plus 12

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)

bar {
	i3bar_command i3bar
	status_command i3status
	position bottom

## please set your primary output first. Example: 'xrandr --output eDP1 --primary'
#	tray_output primary
#	tray_output eDP1

	bindsym button4 nop
	bindsym button5 nop
#   font xft:URWGothic-Book 11
	strip_workspace_numbers yes

    colors {
        background $col0
        statusline $col1
        separator  $col7

#                      border  backgr. text
        focused_workspace  $col0 $col2 $col0
        active_workspace   $col0 $col0 #FDF6E3
        inactive_workspace $col0 $col0 #EEE8D5
        binding_mode       $col0 $col0 #F9FAF9
        urgent_workspace   $col0 $col0 #E5201D
    }
}

# enable transparency
exec_always picom
